/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Tool.java
 *
 * Created on 13-feb-2009, 20:19:32
 */
package hmftool;

import hmftool.consumer.ConsumerWindow;
import hmftool.producer.ProducerWindow;
import javax.swing.DefaultListModel;

/**
 *
 * @author Jan-Egbert
 */
public class Tool extends javax.swing.JFrame {

    private BasicXMLConsumer consumer;

    /** Creates new form Tool */
    public Tool() {
        setTitle("HMF Tool");
        initComponents();
        initialize();
        registerConsumers();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        recievedMessages = new javax.swing.JList();
        lblConsumedMessages = new javax.swing.JLabel();
        btnConsume = new javax.swing.JButton();
        btnProduce = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        recievedMessages.setModel(new DefaultListModel());
        recievedMessages.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        recievedMessages.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                messageSelected(evt);
            }
        });
        jScrollPane1.setViewportView(recievedMessages);

        lblConsumedMessages.setText("Types of messages");

        btnConsume.setText("Consume");
        btnConsume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consume(evt);
            }
        });

        btnProduce.setText("Produce");
        btnProduce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProduceActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addComponent(lblConsumedMessages)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnConsume)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnProduce)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblConsumedMessages)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConsume)
                    .addComponent(btnProduce))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void consume(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consume
        ReceivedMessage m = (ReceivedMessage) recievedMessages.getSelectedValue();
        ConsumerWindow w = new ConsumerWindow(m.getName());
        w.setVisible( true );
    }//GEN-LAST:event_consume

    private void messageSelected(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_messageSelected
        if ( !btnConsume.isEnabled() && !btnProduce.isEnabled() && recievedMessages.getSelectedIndex() != -1 ) {
            btnConsume.setEnabled(true);
            btnProduce.setEnabled(true);
        }
    }//GEN-LAST:event_messageSelected

    private void btnProduceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProduceActionPerformed
        ReceivedMessage m = (ReceivedMessage) recievedMessages.getSelectedValue();
        ProducerWindow w = new ProducerWindow(m.getName(), m.getXml());
        w.setVisible( true );
    }//GEN-LAST:event_btnProduceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Tool().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsume;
    private javax.swing.JButton btnProduce;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblConsumedMessages;
    private javax.swing.JList recievedMessages;
    // End of variables declaration//GEN-END:variables

    private void initialize() {
        btnConsume.setEnabled(false);
        btnProduce.setEnabled(false);

    }
    // End of variables declaration

    private void registerConsumers() {
        consumer = new BasicXMLConsumer(this);
        consumer.startConsuming();
    }

    public void messageReceived(ReceivedMessage message) {
        DefaultListModel model = (DefaultListModel) recievedMessages.getModel();
        if (!model.contains(message)) {
            model.addElement(message);
        }
    }
}
